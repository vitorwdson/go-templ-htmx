package user

import "github.com/vitorwdson/go-templ-htmx/view/layout"

type RegisterViewProps struct {
	Username      string
	Name          string
	Email         string
	UsernameError string
	NameError     string
	EmailError    string
	PasswordError string
}

templ Register(props RegisterViewProps) {
	@layout.Base() {
		<form
			class="flex-1 flex items-center justify-center"
			hx-post="/register"
		>
			<div
				class="rounded-lg border bg-white text-card-foreground shadow-sm w-full max-w-md"
				data-v0-t="card"
			>
				<div
					class="flex flex-col space-y-1.5 p-6"
				>
					<h3 class="font-semibold tracking-tight text-2xl">Register</h3>
					<p class="text-sm text-muted-foreground">
						Please enter your details to create a new account.
					</p>
				</div>
				<div class="p-6 space-y-4">
					<div class="space-y-2">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="username"
						>
							Username
						</label>
						<input
							class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							id="username"
							name="username"
							placeholder="Username"
							required=""
							type="text"
							value={ props.Username }
						/>
						if props.UsernameError != "" {
							<p class="text-red-400 text-sm text-left !mt-0">{ props.UsernameError }</p>
						}
					</div>
					<div class="space-y-2">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="name"
						>
							Name
						</label>
						<input
							class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							id="name"
							name="name"
							placeholder="Name"
							required=""
							type="text"
							value={ props.Name }
						/>
						if props.NameError != "" {
							<p class="text-red-400 text-sm text-left !mt-0">{ props.NameError }</p>
						}
					</div>
					<div class="space-y-2">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="email"
						>
							Email
						</label>
						<input
							class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							id="email"
							name="email"
							placeholder="Email"
							required=""
							type="email"
							value={ props.Email }
						/>
						if props.EmailError != "" {
							<p class="text-red-400 text-sm text-left !mt-0">{ props.EmailError }</p>
						}
					</div>
					<div class="space-y-2">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="password"
						>
							Password
						</label>
						<input
							class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							id="password"
							name="password"
							required=""
							type="password"
						/>
					</div>
					<div class="space-y-2">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="confirm-password"
						>
							Confirm Password
						</label>
						<input
							class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							id="confirm-password"
							name="confirm-password"
							required=""
							type="password"
						/>
						if props.PasswordError != "" {
							<p class="text-red-400 text-sm text-left !mt-0">{ props.PasswordError }</p>
						}
					</div>
				</div>
				<div class="flex items-center p-6">
					<div class="flex w-full gap-2">
						<a
							href="/login"
							hx-boost="true"
							class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-white hover:bg-gray-50 hover:text-black h-10 px-4 py-2 w-full"
						>
							Login
						</a>
						<button
							type="submit"
							class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-black text-white hover:bg-gray-800 h-10 px-4 py-2 w-full"
						>
							Register
						</button>
					</div>
				</div>
			</div>
		</form>
	}
}
